version: '3.8'

services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localAlex
      POSTGRES_DB: digital-univer
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 50   
    networks:
      - local-network

  identity-service:
    build:
      context: .
      dockerfile: Identity.Microservice/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "5000:5000" 
      - "5001:5001"
    networks:
      - local-network
 
  users-service:
    build:
      context: .
      dockerfile: Users.Microservice/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "5002:5002" 
      - "5003:5003"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - local-network

  schedules-service:
    build:
      context: .
      dockerfile: Schedules.Microservice/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "5004:5004" 
      - "5005:5005"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - local-network

  organizations-service:
    build:
      context: .
      dockerfile: Organizations.Microservice/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "5006:5006" 
      - "5007:5007"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - local-network

networks:
  local-network:
    driver: bridge

volumes:
  postgres-data:
